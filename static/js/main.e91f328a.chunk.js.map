{"version":3,"sources":["componentes/TarjetaHeader.jsx","componentes/TarjetaFooter.jsx","componentes/TarjetaImagen.jsx","componentes/TarjetaDatos.jsx","componentes/Tarjeta.jsx","componentes/Pelicula.jsx","componentes/PeliculasList.jsx","componentes/PeliculaForm.jsx","componentes/index.jsx","serviceWorker.js","index.js"],"names":["TarjetaHeader","props","react_default","a","createElement","className","tipo","TarjetaFooter","tiempo","TarjetaImagen","src","poster","alt","TarjetaDatos","nombre","rating","votos","meta","Tarjeta","componentes_TarjetaHeader","componentes_TarjetaImagen","imagen","componentes_TarjetaDatos","componentes_TarjetaFooter","Pelicula","componentes_Tarjeta","PeliculasList","peliculas","map","peli","componentes_Pelicula","key","id","metascore","PeliculaForm","onSubmit","onAddPelicula","type","placeholder","name","required","value","uid","App","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","metascoreTotal","votosMax","ratingTotal","valor","handleOnAddPelicula","bind","assertThisInitialized","fetchData","resetData","calculate","e","_this2","preventDefault","filter","elem","form","target","fetch","titulo","then","response","json","result","Response","pelicula","Title","imdbRating","imdbVotes","Poster","Metascore","Type","find","element","metaTotal","Number","setState","replace","_this3","avgMeta","avgRating","forEach","div","role","componentes_PeliculaForm","componentes_PeliculasList","Component","Boolean","window","location","hostname","match","ReactDOM","render","componentes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e91f328a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TarjetaHeader = (props) => {\r\n        return (\r\n            <div className=\"card-header\">\r\n                <span className=\"text-muted\">{props.tipo}</span>\r\n            </div>\r\n        )    \r\n}\r\n\r\nexport default TarjetaHeader","import React from 'react'\r\n\r\nconst TarjetaFooter = (props) => {\r\n        return (\r\n            <div className=\"card-footer text-muted\">\r\n                <small className=\"text-muted\">{props.tiempo}</small>\r\n            </div>\r\n        )    \r\n}\r\n\r\nexport default TarjetaFooter","import React from 'react'\r\n\r\nconst TarjetaImagen = (props) => {\r\n    return (\r\n        <img className=\"card-img-top\" src={props.poster} alt=\"Movie poster\"/>\r\n    )\r\n}\r\n\r\nexport default TarjetaImagen","import React from 'react'\r\n\r\nconst TarjetaDatos = (props) => (\r\n        <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">{props.nombre}</li>\r\n            <li className=\"list-group-item\">Rating: {props.rating}</li>\r\n            <li className=\"list-group-item\">Votos: {props.votos}</li>\r\n            <li className=\"list-group-item\">Critica: {props.meta}</li>\r\n        </ul>\r\n    )\r\n\r\nexport default TarjetaDatos","import React from 'react'\r\nimport TarjetaHeader from './TarjetaHeader'\r\nimport TarjetaFooter from './TarjetaFooter'\r\nimport TarjetaImagen from './TarjetaImagen'\r\nimport TarjetaDatos from './TarjetaDatos'\r\n\r\nconst Tarjeta = (props) => {\r\n    return (\r\n        <div className=\"card mb-4 box-shadow\">            \r\n            <TarjetaHeader tipo={props.tipo}/>\r\n\r\n            <TarjetaImagen poster={props.imagen} />\r\n\r\n            <TarjetaDatos nombre={props.nombre} rating={props.rating} votos={props.votos} meta={props.meta} />\r\n\r\n            <TarjetaFooter />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tarjeta","import React from 'react'\r\nimport Tarjeta from './Tarjeta'\r\n\r\nconst Pelicula = (props) => {\r\n    return (\r\n        <div className=\"col-md-2\">\r\n            <Tarjeta \r\n                imagen={props.imagen} \r\n                tipo={props.tipo} \r\n                nombre={props.nombre} \r\n                meta={props.meta} \r\n                rating={props.rating} \r\n                votos={props.votos} \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pelicula","import React from 'react'\r\nimport Pelicula from './Pelicula'\r\n\r\n const PeliculasList = (props) => {\r\n    return (\r\n        <div className=\"album py-5 bg-light\">\r\n            <div className=\"container\">       \r\n                <div className=\"row\">\r\n                {\r\n                    props.peliculas.map( peli => (\r\n                        <Pelicula \r\n                            key={peli.id}\r\n                            id={peli.id}\r\n                            nombre={peli.nombre}\r\n                            imagen={peli.imagen}\r\n                            rating={peli.rating}\r\n                            votos={peli.votos}\r\n                            meta={peli.metascore}\r\n                            tipo={peli.tipo}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    )\r\n }\r\n\r\nexport default PeliculasList","import React from 'react'\r\nimport uid from 'uid'\r\n\r\nconst PeliculaForm = (props) => {\r\n    return (\r\n        <section className=\"py-3 text-center\">\r\n            <div className=\"container\">\r\n                <form onSubmit={props.onAddPelicula}>\r\n                    <input type=\"text\" placeholder=\"Nombre de la pelicula\" name=\"titulo\" required></input>\r\n                    <input type=\"hidden\" name=\"id\" value={uid(10)}></input>\r\n                    <input type=\"submit\" value=\"aceptar\"></input>\r\n                </form>\r\n                <p className=\"lead text-muted\">Solamente puede introducir 4 peliculas y 2 series hasta el momento, sin repetir ningun titulo.</p> \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PeliculaForm","import React, { Component } from 'react'\r\nimport PeliculasList from './PeliculasList'\r\nimport PeliculaForm from './PeliculaForm'\r\n//import { cursos } from '../datos/cursos.json'\r\n\r\nclass App extends Component{\r\n    constructor(...props){\r\n        super(...props)\r\n\r\n        this.state = {\r\n            peliculas: [],\r\n            metascoreTotal: 0,\r\n            votosMax: 0,\r\n            ratingTotal: 0,\r\n            valor: 0,\r\n        }\r\n\r\n        this.handleOnAddPelicula = this.handleOnAddPelicula.bind(this)\r\n        this.fetchData = this.fetchData.bind(this)\r\n        this.resetData = this.resetData.bind(this)\r\n        this.calculate = this.calculate.bind(this)\r\n\r\n    }\r\n\r\n    handleOnAddPelicula(e){\r\n        e.preventDefault()\r\n\r\n        if(this.state.peliculas.length < 6){\r\n            if( this.state.peliculas.filter( elem => (elem.tipo === 'movie') ).length < 4 ||\r\n                this.state.peliculas.filter( elem => (elem.tipo === 'series') ).length < 2 ) {\r\n\r\n                let form = e.target\r\n\r\n                fetch('https://www.omdbapi.com/?apikey=34ebed09&t=' + form.titulo.value)\r\n                .then( response => (response.json()))\r\n                .then( result => {\r\n                    if(result.Response === \"True\"){\r\n                        let pelicula = {\r\n                            id: form.id.value,\r\n                            nombre: result.Title,\r\n                            rating: result.imdbRating,\r\n                            votos: result.imdbVotes,\r\n                            imagen: result.Poster,\r\n                            metascore: result.Metascore,\r\n                            tipo: result.Type,\r\n                        }\r\n    \r\n                        const found = this.state.peliculas.find( element => (element.nombre === pelicula.nombre) )\r\n                        if(!found){\r\n                            let metaTotal = (pelicula.tipo === 'movie') ? (Number(this.state.metascoreTotal) + Number(pelicula.metascore)) : Number(this.state.metascoreTotal) \r\n                            this.setState({\r\n                                peliculas: this.state.peliculas.concat([pelicula]),\r\n                                metascoreTotal: metaTotal,\r\n                                ratingTotal: Number(this.state.ratingTotal) + Number(pelicula.rating),\r\n                                votosMax: (Number( pelicula.votos.replace(/\\,/g,'') ) > Number(this.state.votosMax)) ? Number(pelicula.votos.replace(/\\,/g,'')) : this.state.votosMax \r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n        else{\r\n            this.calculate()\r\n        }\r\n    }\r\n\r\n    fetchData() { \r\n        //setTimeout(() => this.setState({ courses: cursos }), 2000)\r\n\r\n        /*fetch('https://restcountries.eu/rest/v1/all')\r\n        .then( response => (response.json()))\r\n        .then( result => {\r\n            console.log(result)\r\n        })*/\r\n    }\r\n\r\n    resetData() {\r\n        this.setState( { peliculas: [] } )\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.fetchData()\r\n    }\r\n\r\n    calculate(){\r\n        let avgMeta = this.state.metascoreTotal / 4\r\n        let avgRating = this.state.ratingTotal / 6\r\n        \r\n        let votos = 0\r\n        this.state.peliculas.forEach(element => {\r\n            let div = Number(element.votos.replace(/\\,/g,'')) / Number(this.state.votosMax)\r\n            votos += div\r\n            \r\n        });\r\n      \r\n        let result = avgMeta/100 + avgRating/10 + votos\r\n        this.setState({\r\n            valor: result\r\n        })        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <main role=\"main\">\r\n                    <PeliculaForm onAddPelicula = {this.handleOnAddPelicula} />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                            <PeliculasList peliculas={this.state.peliculas} />\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            Ranking de jugadores\r\n                            <p>...</p>\r\n                            <p>...</p>\r\n                            <p>...</p>\r\n                            <p>...</p>\r\n                            <p>...</p>\r\n                            <p>...</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                \r\n                {/* <Footer /> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componentes/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}